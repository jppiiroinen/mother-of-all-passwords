---
#######################################################
# Author: Juhapekka Piiroinen <jp@1337.fi>
# License: MIT
#
# Copyright 2019 Juhapekka Piiroinen <jp@1337.fi>
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#######################################################
- name: "Prepare the new password and fetch required information"
  hosts: all
  become: false
  gather_facts: no
  run_once: yes
  tasks:
    - name: "fetch the root username"
      delegate_to: localhost
      shell: "lpass show {{ ansible_limit }}/root --username"
      register: root_username
    
    - name: "fetch the root password"
      delegate_to: localhost
      shell: "lpass show {{ ansible_limit }}/root --password"
      register: root_password

    - name: "fetch the current username"
      delegate_to: localhost
      shell: "lpass show {{ ansible_limit }}/{{ account_name }} --username"
      register: current_username
    
    - name: "fetch the current password"
      delegate_to: localhost
      shell: "lpass show {{ ansible_limit }}/{{ account_name }} --password"
      register: current_password

    - name: "generate new password"
      delegate_to: localhost
      shell: tr -dc '{{ password_characters }}' < /dev/urandom | head -c {{ password_length }}
      environment:
        LC_CTYPE: C
      register: new_password

- name: Change the passwords
  hosts: "{{ ansible_limit }}"
  vars:
    ansible_become_user: "{{ root_username.stdout }}"
    ansible_become_pass: "{{ root_password.stdout }}"
  tasks:
    - name: "Change password on macOS"
      become: yes
      shell: sysadminctl -resetPasswordFor {{ current_username.stdout }} -newPassword {{ new_password.stdout }} -adminUser {{ ansible_become_user }} -adminPassword {{ ansible_become_pass }}
      register: password_reset_command
      failed_when:
        - "'DONE' not in password_reset_command.stderr"
        - "password_reset_command.rc != 0"
      when: ansible_os_family == 'Darwin'
    - name: "Change password on Linux"
      become: yes
      shell: echo {{ current_username.stdout }}:{{ new_password.stdout }} | chpasswd
      register: password_reset_command
      failed_when:
        - "password_reset_command.rc != 0"
      when: ansible_os_family != 'Darwin'

- name: "Store the new password"
  hosts: all
  become: false
  gather_facts: no
  run_once: yes
  tasks:
    - name: "store old password"
      delegate_to: localhost
      shell: "printf '{ \"timestamp\": \"{{ ansible_date_time.iso8601 }}\", \"previous\": \"{{ current_password.stdout }}\" }'| lpass edit --notes {{ ansible_limit }}/{{ account_name }} --non-interactive"

    - name: "store new password"
      delegate_to: localhost
      shell: "printf '{{ new_password.stdout }}'| lpass edit --password {{ ansible_limit }}/{{ account_name }} --non-interactive"
